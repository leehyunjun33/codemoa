
> codingmoa@1.0.0 start /home/ec2-user/codingmoa
> tsc; nodemon ./build/main.js;

[33m[nodemon] 1.19.0[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching: *.*[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: EBADF: bad file descriptor, read
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! codingmoa@1.0.0 start: `tsc; nodemon ./build/main.js;`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the codingmoa@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2019-05-16T07_41_52_501Z-debug.log

> codingmoa@1.0.0 start /home/ec2-user/codingmoa
> tsc; nodemon ./build/main.js;

[33m[nodemon] 1.19.0[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching: *.*[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: EBADF: bad file descriptor, read
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! codingmoa@1.0.0 start: `tsc; nodemon ./build/main.js;`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the codingmoa@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2019-05-16T07_44_54_220Z-debug.log

> codingmoa@1.0.0 start /home/ec2-user/codingmoa
> cd webapp; ng build ; cd .. ;tsc; nodemon ./build/main.js;


Date: 2019-05-16T07:51:40.990Z
Hash: e70863b4a38d0c7f09e2
Time: 22754ms
chunk {common} common.js, common.js.map (common) 3.22 kB  [rendered]
chunk {component-component-module} component-component-module.js, component-component-module.js.map (component-component-module) 322 kB  [rendered]
chunk {es2015-polyfills} es2015-polyfills.js, es2015-polyfills.js.map (es2015-polyfills) 266 kB [initial] [rendered]
chunk {main} main.js, main.js.map (main) 14.4 kB [initial] [rendered]
chunk {pages-pages-module} pages-pages-module.js, pages-pages-module.js.map (pages-pages-module) 47.8 kB  [rendered]
chunk {polyfills} polyfills.js, polyfills.js.map (polyfills) 223 kB [initial] [rendered]
chunk {runtime} runtime.js, runtime.js.map (runtime) 8.9 kB [entry] [rendered]
chunk {scripts} scripts.js, scripts.js.map (scripts) 180 kB [entry] [rendered]
chunk {starter-starter-module} starter-starter-module.js, starter-starter-module.js.map (starter-starter-module) 4.53 kB  [rendered]
chunk {styles} styles.js, styles.js.map (styles) 2.71 MB [initial] [rendered]
chunk {vendor} vendor.js, vendor.js.map (vendor) 4.83 MB [initial] [rendered]
[33m[nodemon] 1.19.0[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching: *.*[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: EBADF: bad file descriptor, read
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! codingmoa@1.0.0 start: `cd webapp; ng build ; cd .. ;tsc; nodemon ./build/main.js;`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the codingmoa@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2019-05-16T07_51_46_591Z-debug.log

> codingmoa@1.0.0 start /home/ec2-user/codingmoa
> cd webapp; ng build --watch; cd .. ;tsc; nodemon ./build/main.js;


Date: 2019-05-16T07:57:19.100Z
Hash: e70863b4a38d0c7f09e2
Time: 255794ms
chunk {common} common.js, common.js.map (common) 3.22 kB  [rendered]
chunk {component-component-module} component-component-module.js, component-component-module.js.map (component-component-module) 322 kB  [rendered]
chunk {es2015-polyfills} es2015-polyfills.js, es2015-polyfills.js.map (es2015-polyfills) 266 kB [initial] [rendered]
chunk {main} main.js, main.js.map (main) 14.4 kB [initial] [rendered]
chunk {pages-pages-module} pages-pages-module.js, pages-pages-module.js.map (pages-pages-module) 47.8 kB  [rendered]
chunk {polyfills} polyfills.js, polyfills.js.map (polyfills) 223 kB [initial] [rendered]
chunk {runtime} runtime.js, runtime.js.map (runtime) 8.9 kB [entry] [rendered]
chunk {scripts} scripts.js, scripts.js.map (scripts) 180 kB [entry] [rendered]
chunk {starter-starter-module} starter-starter-module.js, starter-starter-module.js.map (starter-starter-module) 4.53 kB  [rendered]
chunk {styles} styles.js, styles.js.map (styles) 2.71 MB [initial] [rendered]
chunk {vendor} vendor.js, vendor.js.map (vendor) 4.83 MB [initial] [rendered]

> codingmoa@1.0.0 start /home/ec2-user/codingmoa
> tsc; nodemon ./build/main.js;

[33m[nodemon] 1.19.0[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching: *.*[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/

> codingmoa@1.0.0 start /home/ec2-user/codingmoa
> tsc; nodemon ./build/main.js;

[33m[nodemon] 1.19.0[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching: *.*[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/

> codingmoa@1.0.0 start /home/ec2-user/codingmoa
> tsc; nodemon ./build/main.js;

[33m[nodemon] 1.19.0[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching: *.*[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m

> codingmoa@1.0.0 start /home/ec2-user/codingmoa
> tsc; nodemon ./build/main.js;

[33m[nodemon] 1.19.0[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching: *.*[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
Listening at http://localhost:3000/
error connecting: Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
{ Error: connect ECONNREFUSED 127.0.0.1:3306
    at TCPConnectWrap.afterConnect [as oncomplete] (net.js:1191:14)
    --------------------
    at Protocol._enqueue (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:144:48)
    at Protocol.handshake (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:51:23)
    at Connection.connect (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:119:18)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:13:6)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
    at Module.load (module.js:566:32)
    at tryModuleLoad (module.js:506:12)
    at Function.Module._load (module.js:498:3)
    at Function.Module.runMain (module.js:694:10)
  errno: 'ECONNREFUSED',
  code: 'ECONNREFUSED',
  syscall: 'connect',
  address: '127.0.0.1',
  port: 3306,
  fatal: true }
rows undefined
fields undefined

> codingmoa@1.0.0 start /home/ec2-user/codingmoa
> tsc; nodemon ./build/main.js;

[33m[nodemon] 1.19.0[39m
[33m[nodemon] to restart at any time, enter `rs`[39m
[33m[nodemon] watching: *.*[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
(node:20636) MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 exit listeners added. Use emitter.setMaxListeners() to increase limit
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:49:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:54:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m
[32m[nodemon] restarting due to changes...[39m
[32m[nodemon] starting `node ./build/main.js`[39m
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:29:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:25:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:50:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:55:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
[31m[nodemon] app crashed - waiting for file changes before starting...[39m

> codingmoa@1.0.0 start /home/ec2-user/codingmoa
> tsc; node ./build/main.js;

Listening at http://localhost:3000/
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 552,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 109252,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571554109897,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 563,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 564,
     [Symbol(triggerAsyncId)]: 563 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 552,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 109252,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571554109897,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 563,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 564,
     [Symbol(triggerAsyncId)]: 563 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '51',
     accept: 'application/json, text/plain, */*',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'G_ENABLED_IDPS=google; connect.sid=s%3AV3MFyQUE49jLLwlC2UQO3gWTg_9YA6L8.hBGI3QkRLvZOv0CoyNw6c7B6oGdNadnFICy4zKXTUDY' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '51',
     'Accept',
     'application/json, text/plain, */*',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'G_ENABLED_IDPS=google; connect.sid=s%3AV3MFyQUE49jLLwlC2UQO3gWTg_9YA6L8.hBGI3QkRLvZOv0CoyNw6c7B6oGdNadnFICy4zKXTUDY' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 552,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 4,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 109252,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571554109897,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 563,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 564,
     [Symbol(triggerAsyncId)]: 563 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 552,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 109252,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 563,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 564,
        [Symbol(triggerAsyncId)]: 563 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 552,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 109252,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 563,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 564,
        [Symbol(triggerAsyncId)]: 563 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 593,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'V3MFyQUE49jLLwlC2UQO3gWTg_9YA6L8',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'dlguswns41@naver.com', loginpw: '1234' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main dlguswns41@naver.com
데이터값:  [ { m_id: 9,
    m_email: 'dlguswns41@naver.com',
    m_password: '1234',
    m_name: '이현준',
    m_point: 210,
    m_grade: 'D',
    m_language: 'C',
    m_img: null } ]
로그인성공
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' } ]
json:  [ { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' } ]
main { q_id: '17', temp: 'temp' }
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: false,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 799492,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571554800117,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 4019,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 4021,
     [Symbol(triggerAsyncId)]: 4019 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 799492,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571554800117,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 4019,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 4021,
     [Symbol(triggerAsyncId)]: 4019 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     accept: 'application/json, text/plain, */*',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-language': 'ko',
     'accept-encoding': 'gzip, deflate',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'content-length': '45',
     connection: 'Keep-Alive',
     'cache-control': 'no-cache',
     cookie: 'connect.sid=s%3A-ry7uAxXg05Pu5TgI3a_URx9zSEE6c-6.Q1CqnjtIjAhD%2BaS%2BiYwMc8QV%2BykcydTytlfNuqeqgzo' },
  rawHeaders: 
   [ 'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Accept',
     'application/json, text/plain, */*',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Language',
     'ko',
     'Accept-Encoding',
     'gzip, deflate',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Content-Length',
     '45',
     'Connection',
     'Keep-Alive',
     'Cache-Control',
     'no-cache',
     'Cookie',
     'connect.sid=s%3A-ry7uAxXg05Pu5TgI3a_URx9zSEE6c-6.Q1CqnjtIjAhD%2BaS%2BiYwMc8QV%2BykcydTytlfNuqeqgzo' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 799492,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571554800117,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 4019,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 4021,
     [Symbol(triggerAsyncId)]: 4019 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 799492,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 4019,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 4021,
        [Symbol(triggerAsyncId)]: 4019 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 799492,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 4019,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 4021,
        [Symbol(triggerAsyncId)]: 4019 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 593,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: '-ry7uAxXg05Pu5TgI3a_URx9zSEE6c-6',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'go11@naver.com', loginpw: '1234' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main go11@naver.com
데이터값:  [ { m_id: 11,
    m_email: 'go11@naver.com',
    m_password: '1234',
    m_name: '고건',
    m_point: 0,
    m_grade: 'F',
    m_language: 'C',
    m_img: null } ]
로그인성공
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 1376126,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 4518,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 4519,
        [Symbol(triggerAsyncId)]: 4518 },
     _idleStart: 1376126,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571555376752,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 4508,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 4510,
     [Symbol(triggerAsyncId)]: 4508 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 1376126,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 4518,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 4519,
        [Symbol(triggerAsyncId)]: 4518 },
     _idleStart: 1376126,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571555376752,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 4508,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 4510,
     [Symbol(triggerAsyncId)]: 4508 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     accept: 'application/json, text/plain, */*',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-language': 'ko',
     'accept-encoding': 'gzip, deflate',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'content-length': '229',
     connection: 'Keep-Alive',
     'cache-control': 'no-cache',
     cookie: 'connect.sid=s%3A-ry7uAxXg05Pu5TgI3a_URx9zSEE6c-6.Q1CqnjtIjAhD%2BaS%2BiYwMc8QV%2BykcydTytlfNuqeqgzo' },
  rawHeaders: 
   [ 'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Accept',
     'application/json, text/plain, */*',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Language',
     'ko',
     'Accept-Encoding',
     'gzip, deflate',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Content-Length',
     '229',
     'Connection',
     'Keep-Alive',
     'Cache-Control',
     'no-cache',
     'Cookie',
     'connect.sid=s%3A-ry7uAxXg05Pu5TgI3a_URx9zSEE6c-6.Q1CqnjtIjAhD%2BaS%2BiYwMc8QV%2BykcydTytlfNuqeqgzo' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/questInput',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 1376126,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 4518,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 4519,
        [Symbol(triggerAsyncId)]: 4518 },
     _idleStart: 1376126,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571555376752,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 4508,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 4510,
     [Symbol(triggerAsyncId)]: 4508 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/questInput',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/questInput',
     path: '/questInput',
     href: '/questInput',
     _raw: '/questInput' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1376126,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 4508,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 4510,
        [Symbol(triggerAsyncId)]: 4508 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 1376126,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 4508,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 4510,
        [Symbol(triggerAsyncId)]: 4508 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/questInput',
     path: '/questInput',
     href: '/questInput',
     _raw: '/questInput' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: true,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 900615,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: '-ry7uAxXg05Pu5TgI3a_URx9zSEE6c-6',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { name: '고건',
     email: 'go11@naver.com',
     title: '파이썬 에러 질문이요',
     content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
     category: 'python' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/questInput',
     stack: [ [Object] ],
     methods: { post: true } } }
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
reqemail go11@naver.com
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
reqemail go11@naver.com
json:  []
reqemail go11@naver.com
json:  []
question:  []
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
json:  [ { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' } ]
question:  []
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' } ]
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 3958606,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571557959231,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11161,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 11162,
     [Symbol(triggerAsyncId)]: 11161 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 3958606,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571557959231,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11161,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 11162,
     [Symbol(triggerAsyncId)]: 11161 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '117',
     accept: 'application/json, text/plain, */*',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3A0CKYyZxdqmsm_SvS_EHysRiq9UL0B4gE.b7wSeEx34KrT3e0OVZ4KKscLm60bmxx7LQAdqR3Ct3I' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '117',
     'Accept',
     'application/json, text/plain, */*',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3A0CKYyZxdqmsm_SvS_EHysRiq9UL0B4gE.b7wSeEx34KrT3e0OVZ4KKscLm60bmxx7LQAdqR3Ct3I' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/register',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 3958606,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571557959231,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11161,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 11162,
     [Symbol(triggerAsyncId)]: 11161 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/register',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/register',
     path: '/register',
     href: '/register',
     _raw: '/register' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 3958606,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 11161,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 11162,
        [Symbol(triggerAsyncId)]: 11161 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 3958606,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 11161,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 11162,
        [Symbol(triggerAsyncId)]: 11161 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/register',
     path: '/register',
     href: '/register',
     _raw: '/register' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: true,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 3600797,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: '0CKYyZxdqmsm_SvS_EHysRiq9UL0B4gE',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { m_email: 'python@naver.com',
     m_password: '1234',
     m_name: '파이썬사랑해',
     c_name: 'Python',
     m_img: 'lion.jpg' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/register',
     stack: [ [Object] ],
     methods: { post: true } } }
main 파이썬사랑해
UPLOAD SUCCESS! { fieldname: 'avatar',
  originalname: 'lion.jpg',
  encoding: '7bit',
  mimetype: 'image/jpeg',
  destination: 'webapp/src/assets/images/',
  filename: 'lion.jpg',
  path: 'webapp/src/assets/images/lion.jpg',
  size: 9855 }
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4388718,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558389343,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11717,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 11719,
     [Symbol(triggerAsyncId)]: 11717 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4388718,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558389343,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11717,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 11719,
     [Symbol(triggerAsyncId)]: 11717 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '47',
     accept: 'application/json, text/plain, */*',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3A0CKYyZxdqmsm_SvS_EHysRiq9UL0B4gE.b7wSeEx34KrT3e0OVZ4KKscLm60bmxx7LQAdqR3Ct3I' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '47',
     'Accept',
     'application/json, text/plain, */*',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.120 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3A0CKYyZxdqmsm_SvS_EHysRiq9UL0B4gE.b7wSeEx34KrT3e0OVZ4KKscLm60bmxx7LQAdqR3Ct3I' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4388718,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558389343,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 11717,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 11719,
     [Symbol(triggerAsyncId)]: 11717 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4388718,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 11717,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 11719,
        [Symbol(triggerAsyncId)]: 11717 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4388718,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 11717,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 11719,
        [Symbol(triggerAsyncId)]: 11717 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: true,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 3600797,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: '0CKYyZxdqmsm_SvS_EHysRiq9UL0B4gE',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'python@naver.com', loginpw: '1234' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main python@naver.com
데이터값:  [ { m_id: 33,
    m_email: 'python@naver.com',
    m_password: '1234',
    m_name: '파이썬사랑해',
    m_point: 0,
    m_grade: 'F',
    m_language: 'Python',
    m_img: 'lion.jpg' } ]
로그인성공
reqemail python@naver.com
reqemail python@naver.com
reqemail python@naver.com
json:  []
json:  []
json:  []
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
json:  [ { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' } ]
question:  []
json:  [ { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
reqemail python@naver.com
json:  []
reqemail python@naver.com
json:  []
reqemail python@naver.com
json:  []
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
main { q_id: '37', temp: 'temp' }
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4556567,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 13514,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 13515,
        [Symbol(triggerAsyncId)]: 13514 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4556568,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558557193,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 13509,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 13510,
     [Symbol(triggerAsyncId)]: 13509 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4556567,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 13514,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 13515,
        [Symbol(triggerAsyncId)]: 13514 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4556568,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558557193,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 13509,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 13510,
     [Symbol(triggerAsyncId)]: 13509 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     accept: 'application/json, text/plain, */*',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-language': 'ko',
     'accept-encoding': 'gzip, deflate',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'content-length': '48',
     connection: 'Keep-Alive',
     'cache-control': 'no-cache',
     cookie: 'connect.sid=s%3AyemCRn87HaG0TFvvlJyzUYW2Uby_8ewn.Ca0dCgmkZHs3FV2687nrakp%2FjpTWacKDPMTTAxTjRh0' },
  rawHeaders: 
   [ 'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Accept',
     'application/json, text/plain, */*',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Language',
     'ko',
     'Accept-Encoding',
     'gzip, deflate',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Content-Length',
     '48',
     'Connection',
     'Keep-Alive',
     'Cache-Control',
     'no-cache',
     'Cookie',
     'connect.sid=s%3AyemCRn87HaG0TFvvlJyzUYW2Uby_8ewn.Ca0dCgmkZHs3FV2687nrakp%2FjpTWacKDPMTTAxTjRh0' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4556567,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 13514,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 13515,
        [Symbol(triggerAsyncId)]: 13514 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4556568,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558557193,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 13509,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 13510,
     [Symbol(triggerAsyncId)]: 13509 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4556568,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 13509,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 13510,
        [Symbol(triggerAsyncId)]: 13509 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4556568,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 13509,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 13510,
        [Symbol(triggerAsyncId)]: 13509 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: true,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 4500798,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'yemCRn87HaG0TFvvlJyzUYW2Uby_8ewn',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'codemoa@naver.com', loginpw: '1234' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main codemoa@naver.com
데이터값:  [ { m_id: 13,
    m_email: 'codemoa@naver.com',
    m_password: '1234',
    m_name: '김동양',
    m_point: 60,
    m_grade: 'F',
    m_language: 'C',
    m_img: null } ]
로그인성공
main { q_id: '37', temp: 'temp' }
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 4582984,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 14009,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14010,
        [Symbol(triggerAsyncId)]: 14009 },
     _idleStart: 4582984,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558583610,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 14000,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 14001,
     [Symbol(triggerAsyncId)]: 14000 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 4582984,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 14009,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14010,
        [Symbol(triggerAsyncId)]: 14009 },
     _idleStart: 4582984,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558583610,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 14000,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 14001,
     [Symbol(triggerAsyncId)]: 14000 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     accept: 'application/json, text/plain, */*',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-language': 'ko',
     'accept-encoding': 'gzip, deflate',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'content-length': '150',
     connection: 'Keep-Alive',
     'cache-control': 'no-cache',
     cookie: 'connect.sid=s%3AyemCRn87HaG0TFvvlJyzUYW2Uby_8ewn.Ca0dCgmkZHs3FV2687nrakp%2FjpTWacKDPMTTAxTjRh0' },
  rawHeaders: 
   [ 'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Accept',
     'application/json, text/plain, */*',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Language',
     'ko',
     'Accept-Encoding',
     'gzip, deflate',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Content-Length',
     '150',
     'Connection',
     'Keep-Alive',
     'Cache-Control',
     'no-cache',
     'Cookie',
     'connect.sid=s%3AyemCRn87HaG0TFvvlJyzUYW2Uby_8ewn.Ca0dCgmkZHs3FV2687nrakp%2FjpTWacKDPMTTAxTjRh0' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/awnserInput',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 4582984,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 14009,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14010,
        [Symbol(triggerAsyncId)]: 14009 },
     _idleStart: 4582984,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558583610,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 14000,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 14001,
     [Symbol(triggerAsyncId)]: 14000 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/awnserInput',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/awnserInput',
     path: '/awnserInput',
     href: '/awnserInput',
     _raw: '/awnserInput' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4582984,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 14000,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14001,
        [Symbol(triggerAsyncId)]: 14000 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4582984,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 14000,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14001,
        [Symbol(triggerAsyncId)]: 14000 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/awnserInput',
     path: '/awnserInput',
     href: '/awnserInput',
     _raw: '/awnserInput' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: true,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 4500798,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'yemCRn87HaG0TFvvlJyzUYW2Uby_8ewn',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { q_id: '37',
     q_name: '고건',
     a_name: '김동양',
     content: '저거 \'이거나 " 빼먹어서 나는 오류입니다.',
     email: 'codemoa@naver.com' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/awnserInput',
     stack: [ [Object] ],
     methods: { post: true } } }
main undefined
main { q_id: '37', temp: 'temp' }
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4637200,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 14401,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14402,
        [Symbol(triggerAsyncId)]: 14401 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4637201,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558637827,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 14395,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 14397,
     [Symbol(triggerAsyncId)]: 14395 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4637200,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 14401,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14402,
        [Symbol(triggerAsyncId)]: 14401 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4637201,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558637827,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 14395,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 14397,
     [Symbol(triggerAsyncId)]: 14395 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     accept: 'application/json, text/plain, */*',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-language': 'ko',
     'accept-encoding': 'gzip, deflate',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'content-length': '199',
     connection: 'Keep-Alive',
     'cache-control': 'no-cache',
     cookie: 'connect.sid=s%3AyemCRn87HaG0TFvvlJyzUYW2Uby_8ewn.Ca0dCgmkZHs3FV2687nrakp%2FjpTWacKDPMTTAxTjRh0' },
  rawHeaders: 
   [ 'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Accept',
     'application/json, text/plain, */*',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Language',
     'ko',
     'Accept-Encoding',
     'gzip, deflate',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Content-Length',
     '199',
     'Connection',
     'Keep-Alive',
     'Cache-Control',
     'no-cache',
     'Cookie',
     'connect.sid=s%3AyemCRn87HaG0TFvvlJyzUYW2Uby_8ewn.Ca0dCgmkZHs3FV2687nrakp%2FjpTWacKDPMTTAxTjRh0' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/questInput',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4637200,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 14401,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14402,
        [Symbol(triggerAsyncId)]: 14401 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4637201,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558637827,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 14395,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 14397,
     [Symbol(triggerAsyncId)]: 14395 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/questInput',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/questInput',
     path: '/questInput',
     href: '/questInput',
     _raw: '/questInput' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4637201,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 14395,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14397,
        [Symbol(triggerAsyncId)]: 14395 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4637201,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 14395,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14397,
        [Symbol(triggerAsyncId)]: 14395 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/questInput',
     path: '/questInput',
     href: '/questInput',
     _raw: '/questInput' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: true,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 4500798,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'yemCRn87HaG0TFvvlJyzUYW2Uby_8ewn',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { name: '김동양',
     email: 'codemoa@naver.com',
     title: '파이썬 오류 해결좀..',
     content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
     category: 'python' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/questInput',
     stack: [ [Object] ],
     methods: { post: true } } }
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4690062,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 14792,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14793,
        [Symbol(triggerAsyncId)]: 14792 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4690063,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558690689,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 14797,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 14798,
     [Symbol(triggerAsyncId)]: 14797 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4690062,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 14792,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14793,
        [Symbol(triggerAsyncId)]: 14792 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4690063,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558690689,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 14797,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 14798,
     [Symbol(triggerAsyncId)]: 14797 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     accept: 'application/json, text/plain, */*',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-language': 'ko',
     'accept-encoding': 'gzip, deflate',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'content-length': '197',
     connection: 'Keep-Alive',
     'cache-control': 'no-cache',
     cookie: 'connect.sid=s%3AyemCRn87HaG0TFvvlJyzUYW2Uby_8ewn.Ca0dCgmkZHs3FV2687nrakp%2FjpTWacKDPMTTAxTjRh0' },
  rawHeaders: 
   [ 'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Accept',
     'application/json, text/plain, */*',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Language',
     'ko',
     'Accept-Encoding',
     'gzip, deflate',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Content-Length',
     '197',
     'Connection',
     'Keep-Alive',
     'Cache-Control',
     'no-cache',
     'Cookie',
     'connect.sid=s%3AyemCRn87HaG0TFvvlJyzUYW2Uby_8ewn.Ca0dCgmkZHs3FV2687nrakp%2FjpTWacKDPMTTAxTjRh0' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/questInput',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4690062,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 14792,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14793,
        [Symbol(triggerAsyncId)]: 14792 },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Object],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4690063,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558690689,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 14797,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 14798,
     [Symbol(triggerAsyncId)]: 14797 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/questInput',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/questInput',
     path: '/questInput',
     href: '/questInput',
     _raw: '/questInput' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4690063,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 14797,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14798,
        [Symbol(triggerAsyncId)]: 14797 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4690063,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 14797,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 14798,
        [Symbol(triggerAsyncId)]: 14797 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/questInput',
     path: '/questInput',
     href: '/questInput',
     _raw: '/questInput' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: true,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 4500798,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'yemCRn87HaG0TFvvlJyzUYW2Uby_8ewn',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { name: '김동양',
     email: 'codemoa@naver.com',
     title: '파이썬 하나더.. 질',
     content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
     category: 'python' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/questInput',
     stack: [ [Object] ],
     methods: { post: true } } }
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4710372,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558711000,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 15620,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 15621,
     [Symbol(triggerAsyncId)]: 15620 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4710372,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558711000,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 15620,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 15621,
     [Symbol(triggerAsyncId)]: 15620 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     accept: 'application/json, text/plain, */*',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-language': 'ko',
     'accept-encoding': 'gzip, deflate',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'content-length': '45',
     connection: 'Keep-Alive',
     'cache-control': 'no-cache',
     cookie: 'connect.sid=s%3AyemCRn87HaG0TFvvlJyzUYW2Uby_8ewn.Ca0dCgmkZHs3FV2687nrakp%2FjpTWacKDPMTTAxTjRh0' },
  rawHeaders: 
   [ 'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Accept',
     'application/json, text/plain, */*',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Language',
     'ko',
     'Accept-Encoding',
     'gzip, deflate',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Content-Length',
     '45',
     'Connection',
     'Keep-Alive',
     'Cache-Control',
     'no-cache',
     'Cookie',
     'connect.sid=s%3AyemCRn87HaG0TFvvlJyzUYW2Uby_8ewn.Ca0dCgmkZHs3FV2687nrakp%2FjpTWacKDPMTTAxTjRh0' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4710372,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558711000,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 15620,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 15621,
     [Symbol(triggerAsyncId)]: 15620 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4710372,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 15620,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 15621,
        [Symbol(triggerAsyncId)]: 15620 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4710372,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 15620,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 15621,
        [Symbol(triggerAsyncId)]: 15620 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: true,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 4500798,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'yemCRn87HaG0TFvvlJyzUYW2Uby_8ewn',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'go11@naver.com', loginpw: '1234' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main go11@naver.com
데이터값:  [ { m_id: 11,
    m_email: 'go11@naver.com',
    m_password: '1234',
    m_name: '고건',
    m_point: 5,
    m_grade: 'F',
    m_language: 'C',
    m_img: null } ]
로그인성공
main { q_id: '37', temp: 'temp' }
main { q_id: '37', temp: 'temp' }
main { email: 'codemoa@naver.com', a_id: 41, q_id: 37 }
몇점일까요22 100
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 0,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
json:  [ { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
main { q_id: '37', temp: 'temp' }
main { q_id: '38', temp: 'temp' }
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 4803212,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 17196,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 17197,
        [Symbol(triggerAsyncId)]: 17196 },
     _idleStart: 4803212,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558803837,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 17185,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 17186,
     [Symbol(triggerAsyncId)]: 17185 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 4803212,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 17196,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 17197,
        [Symbol(triggerAsyncId)]: 17196 },
     _idleStart: 4803212,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558803837,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 17185,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 17186,
     [Symbol(triggerAsyncId)]: 17185 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     accept: 'application/json, text/plain, */*',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-language': 'ko',
     'accept-encoding': 'gzip, deflate',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'content-length': '236',
     connection: 'Keep-Alive',
     'cache-control': 'no-cache',
     cookie: 'connect.sid=s%3AyemCRn87HaG0TFvvlJyzUYW2Uby_8ewn.Ca0dCgmkZHs3FV2687nrakp%2FjpTWacKDPMTTAxTjRh0' },
  rawHeaders: 
   [ 'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Accept',
     'application/json, text/plain, */*',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Language',
     'ko',
     'Accept-Encoding',
     'gzip, deflate',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Content-Length',
     '236',
     'Connection',
     'Keep-Alive',
     'Cache-Control',
     'no-cache',
     'Cookie',
     'connect.sid=s%3AyemCRn87HaG0TFvvlJyzUYW2Uby_8ewn.Ca0dCgmkZHs3FV2687nrakp%2FjpTWacKDPMTTAxTjRh0' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/awnserInput',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 2,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Object],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 4803212,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 17196,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 17197,
        [Symbol(triggerAsyncId)]: 17196 },
     _idleStart: 4803212,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558803837,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 17185,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 17186,
     [Symbol(triggerAsyncId)]: 17185 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/awnserInput',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/awnserInput',
     path: '/awnserInput',
     href: '/awnserInput',
     _raw: '/awnserInput' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4803212,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 17185,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 17186,
        [Symbol(triggerAsyncId)]: 17185 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4803212,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 17185,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 17186,
        [Symbol(triggerAsyncId)]: 17185 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/awnserInput',
     path: '/awnserInput',
     href: '/awnserInput',
     _raw: '/awnserInput' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: true,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 4500798,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'yemCRn87HaG0TFvvlJyzUYW2Uby_8ewn',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { q_id: '38',
     q_name: '김동양',
     a_name: '고건',
     content: 'if 문 다음줄에 들여쓰기(indentation)가 있어야 하는데, 들여쓰기가 모자랍니다.\n파이썬은 들여쓰기 중요합니다!',
     email: 'go11@naver.com' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/awnserInput',
     stack: [ [Object] ],
     methods: { post: true } } }
main undefined
main { q_id: '38', temp: 'temp' }
main { q_id: '37', temp: 'temp' }
main { q_id: '39', temp: 'temp' }
UPLOAD SUCCESS! { fieldname: 'avatar',
  originalname: 'pythonimg1.PNG',
  encoding: '7bit',
  mimetype: 'image/png',
  destination: 'webapp/src/assets/images/',
  filename: 'pythonimg1.PNG',
  path: 'webapp/src/assets/images/pythonimg1.PNG',
  size: 193702 }
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\n',
    l_img: 'pythonimg1.PNG',
    l_video: 'small.mp4' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\n',
    l_img: 'pythonimg1.PNG',
    l_video: 'small.mp4' } ]
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 8,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 8,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4855275,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 19090,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 19091,
        [Symbol(triggerAsyncId)]: 19090 },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 1103,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 4855358,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Object],
        [Symbol(asyncId)]: 18552,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 18553,
        [Symbol(triggerAsyncId)]: 18552 },
     _idleStart: 4855275,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558856081,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 19086,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 19087,
     [Symbol(triggerAsyncId)]: 19086 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 8,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 8,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4855275,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 19090,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 19091,
        [Symbol(triggerAsyncId)]: 19090 },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 1103,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 4855358,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Object],
        [Symbol(asyncId)]: 18552,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 18553,
        [Symbol(triggerAsyncId)]: 18552 },
     _idleStart: 4855275,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558856081,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 19086,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 19087,
     [Symbol(triggerAsyncId)]: 19086 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { 'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     accept: 'application/json, text/plain, */*',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-language': 'ko',
     'accept-encoding': 'gzip, deflate',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'content-length': '195',
     connection: 'Keep-Alive',
     'cache-control': 'no-cache',
     cookie: 'connect.sid=s%3AyemCRn87HaG0TFvvlJyzUYW2Uby_8ewn.Ca0dCgmkZHs3FV2687nrakp%2FjpTWacKDPMTTAxTjRh0' },
  rawHeaders: 
   [ 'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Accept',
     'application/json, text/plain, */*',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Language',
     'ko',
     'Accept-Encoding',
     'gzip, deflate',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; WOW64; APCPMS=^N2016071402351987094896AF2606CB57B33F_5267^; Trident/7.0; rv:11.0) like Gecko',
     'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Content-Length',
     '195',
     'Connection',
     'Keep-Alive',
     'Cache-Control',
     'no-cache',
     'Cookie',
     'connect.sid=s%3AyemCRn87HaG0TFvvlJyzUYW2Uby_8ewn.Ca0dCgmkZHs3FV2687nrakp%2FjpTWacKDPMTTAxTjRh0' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/awnserInput',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 8,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 8,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Circular],
        _idleStart: 4855275,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        [Symbol(asyncId)]: 19090,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 19091,
        [Symbol(triggerAsyncId)]: 19090 },
     _idlePrev: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 1103,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Circular],
        _idlePrev: [Object],
        _idleStart: 4855358,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Object],
        [Symbol(asyncId)]: 18552,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 18553,
        [Symbol(triggerAsyncId)]: 18552 },
     _idleStart: 4855275,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1571558856081,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 19086,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 19087,
     [Symbol(triggerAsyncId)]: 19086 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/awnserInput',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/awnserInput',
     path: '/awnserInput',
     href: '/awnserInput',
     _raw: '/awnserInput' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4855275,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 19086,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 19087,
        [Symbol(triggerAsyncId)]: 19086 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4855275,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 19086,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 19087,
        [Symbol(triggerAsyncId)]: 19086 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/awnserInput',
     path: '/awnserInput',
     href: '/awnserInput',
     _raw: '/awnserInput' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [Array],
        _allConnections: [Array],
        _freeConnections: [],
        _connectionQueue: [Array],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: true,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 4500798,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'yemCRn87HaG0TFvvlJyzUYW2Uby_8ewn',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { q_id: '39',
     q_name: '김동양',
     a_name: '고건',
     content: '파이썬에서 변수 이름을 숫자로 시작 할 수 없습니다! 변수 이름을 바꿔주세요.',
     email: 'go11@naver.com' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/awnserInput',
     stack: [ [Object] ],
     methods: { post: true } } }
main undefined
main { q_id: '39', temp: 'temp' }
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\n',
    l_img: 'pythonimg1.PNG',
    l_video: 'small.mp4' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\n',
    l_img: 'pythonimg1.PNG',
    l_video: 'small.mp4' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 2,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' } ]
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: Connection lost: The server closed the connection.
    at Protocol.end (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:112:13)
    at Socket.<anonymous> (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:97:28)
    at Socket.<anonymous> (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:525:10)
    at emitNone (events.js:111:20)
    at Socket.emit (events.js:208:7)
    at endReadableNT (_stream_readable.js:1064:12)
    at _combinedTickCallback (internal/process/next_tick.js:139:11)
    at process._tickCallback (internal/process/next_tick.js:181:9)
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! codingmoa@1.0.0 start: `tsc; node ./build/main.js;`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the codingmoa@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2019-10-20T16_22_23_139Z-debug.log

> codingmoa@1.0.0 start /home/ec2-user/codingmoa
> tsc; node ./build/main.js;

events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: listen EADDRINUSE :::3000
    at Server.setupListenHandle [as _listen2] (net.js:1360:14)
    at listenInCluster (net.js:1401:12)
    at Server.listen (net.js:1485:7)
    at Function.listen (/home/ec2-user/codingmoa/node_modules/express/lib/application.js:618:24)
    at Server.config (/home/ec2-user/codingmoa/build/main.js:62:18)
    at new Server (/home/ec2-user/codingmoa/build/main.js:43:14)
    at Function.bootstrap (/home/ec2-user/codingmoa/build/main.js:233:16)
    at Object.<anonymous> (/home/ec2-user/codingmoa/build/main.js:238:8)
    at Module._compile (module.js:653:30)
    at Object.Module._extensions..js (module.js:664:10)
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! codingmoa@1.0.0 start: `tsc; node ./build/main.js;`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the codingmoa@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2019-11-11T10_19_01_223Z-debug.log

> codingmoa@1.0.0 start /home/ec2-user/codingmoa
> tsc; node ./build/main.js;

Listening at http://localhost:3000/
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 28441,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1573467629321,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 442,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 443,
     [Symbol(triggerAsyncId)]: 442 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 28441,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1573467629321,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 442,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 443,
     [Symbol(triggerAsyncId)]: 442 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '47',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AYvBI4M8jg3p7XujIYi-A2BQfCHsZnNwp.qOkDbMDsYxCyhwsyifLaja3%2BmAcY38wodgo7dgz8Sfk' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '47',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AYvBI4M8jg3p7XujIYi-A2BQfCHsZnNwp.qOkDbMDsYxCyhwsyifLaja3%2BmAcY38wodgo7dgz8Sfk' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 28441,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1573467629321,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 442,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 443,
     [Symbol(triggerAsyncId)]: 442 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 28441,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 442,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 443,
        [Symbol(triggerAsyncId)]: 442 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 28441,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 442,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 443,
        [Symbol(triggerAsyncId)]: 442 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 443,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'YvBI4M8jg3p7XujIYi-A2BQfCHsZnNwp',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'python@naver.com', loginpw: '1234' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main python@naver.com
데이터값:  [ { m_id: 33,
    m_email: 'python@naver.com',
    m_password: '1234',
    m_name: '파이썬사랑해',
    m_point: 30,
    m_grade: 'D',
    m_language: 'Python',
    m_img: 'lion.jpg' } ]
로그인성공
reqemail python@naver.com
reqemail python@naver.com
reqemail python@naver.com
json:  []
json:  [ { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1 } ]
json:  [ { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
메모데이터확인 []
메모를 저장하였습니다.
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 106327,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1573467707207,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 3407,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 3408,
     [Symbol(triggerAsyncId)]: 3407 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 106327,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1573467707207,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 3407,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 3408,
     [Symbol(triggerAsyncId)]: 3407 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '47',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AYvBI4M8jg3p7XujIYi-A2BQfCHsZnNwp.qOkDbMDsYxCyhwsyifLaja3%2BmAcY38wodgo7dgz8Sfk' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '47',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AYvBI4M8jg3p7XujIYi-A2BQfCHsZnNwp.qOkDbMDsYxCyhwsyifLaja3%2BmAcY38wodgo7dgz8Sfk' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 106327,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1573467707207,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 3407,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 3408,
     [Symbol(triggerAsyncId)]: 3407 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 106327,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 3407,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 3408,
        [Symbol(triggerAsyncId)]: 3407 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 106327,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 3407,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 3408,
        [Symbol(triggerAsyncId)]: 3407 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 443,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'YvBI4M8jg3p7XujIYi-A2BQfCHsZnNwp',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'python@naver.com', loginpw: '1234' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main python@naver.com
데이터값:  [ { m_id: 33,
    m_email: 'python@naver.com',
    m_password: '1234',
    m_name: '파이썬사랑해',
    m_point: 30,
    m_grade: 'D',
    m_language: 'Python',
    m_img: 'lion.jpg' } ]
로그인성공
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
메모데이터확인 []
메모를 저장하였습니다.
reqemail python@naver.com
json:  []
reqemail python@naver.com
json:  [ { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1 } ]
reqemail python@naver.com
json:  [ { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
reqemail python@naver.com
json:  []
reqemail python@naver.com
json:  [ { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1 } ]
reqemail python@naver.com
json:  [ { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
main { q_id: '40', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
reqemail python@naver.com
json:  []
reqemail python@naver.com
json:  [ { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1 } ]
reqemail python@naver.com
json:  [ { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 150518,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1573467751399,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 5059,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 5061,
     [Symbol(triggerAsyncId)]: 5059 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 150518,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1573467751399,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 5059,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 5061,
     [Symbol(triggerAsyncId)]: 5059 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '188',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AYvBI4M8jg3p7XujIYi-A2BQfCHsZnNwp.qOkDbMDsYxCyhwsyifLaja3%2BmAcY38wodgo7dgz8Sfk' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '188',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AYvBI4M8jg3p7XujIYi-A2BQfCHsZnNwp.qOkDbMDsYxCyhwsyifLaja3%2BmAcY38wodgo7dgz8Sfk' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/questInput',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 150518,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1573467751399,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 5059,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 5061,
     [Symbol(triggerAsyncId)]: 5059 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/questInput',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/questInput',
     path: '/questInput',
     href: '/questInput',
     _raw: '/questInput' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 150518,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 5059,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 5061,
        [Symbol(triggerAsyncId)]: 5059 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 150518,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 5059,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 5061,
        [Symbol(triggerAsyncId)]: 5059 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/questInput',
     path: '/questInput',
     href: '/questInput',
     _raw: '/questInput' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 443,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'YvBI4M8jg3p7XujIYi-A2BQfCHsZnNwp',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { name: '파이썬사랑해',
     email: 'python@naver.com',
     title: '최종데모',
     content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
     category: 'C' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/questInput',
     stack: [ [Object] ],
     methods: { post: true } } }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '42', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
question:  []
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4006292,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1573471607173,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 9682,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 9683,
     [Symbol(triggerAsyncId)]: 9682 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4006292,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1573471607173,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 9682,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 9683,
     [Symbol(triggerAsyncId)]: 9682 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '45',
     accept: 'application/json, text/plain, */*',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'user-agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AIHoUWULkyzSyooPkT-PM5cQGi0x0Zl7q.0gPaGiHXTNF1tUAv1s9a9Y04Im23RH7sk7HWI7bpwhU' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '45',
     'Accept',
     'application/json, text/plain, */*',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AIHoUWULkyzSyooPkT-PM5cQGi0x0Zl7q.0gPaGiHXTNF1tUAv1s9a9Y04Im23RH7sk7HWI7bpwhU' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 4006292,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1573471607173,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 9682,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 9683,
     [Symbol(triggerAsyncId)]: 9682 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4006292,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 9682,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 9683,
        [Symbol(triggerAsyncId)]: 9682 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 4006292,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 9682,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 9683,
        [Symbol(triggerAsyncId)]: 9682 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: true,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 3600681,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'IHoUWULkyzSyooPkT-PM5cQGi0x0Zl7q',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'java@naver.com', loginpw: '1234' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main java@naver.com
데이터값:  [ { m_id: 32,
    m_email: 'java@naver.com',
    m_password: '1234',
    m_name: '자바맨',
    m_point: 40,
    m_grade: 'D',
    m_language: 'JAVA',
    m_img: '다운로드.png' } ]
로그인성공
reqemail java@naver.com
json:  [ { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
reqemail java@naver.com
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1 } ]
reqemail java@naver.com
json:  [ { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' } ]
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
question:  []
reqemail java@naver.com
json:  [ { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
reqemail java@naver.com
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1 } ]
reqemail java@naver.com
json:  [ { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' } ]
main { q_id: '41', temp: 'temp' }
main { email: 'python@naver.com', a_id: 50, q_id: 41 }
몇점일까요22 65
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
reqemail java@naver.com
json:  [ { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
reqemail java@naver.com
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1 } ]
reqemail java@naver.com
json:  [ { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' } ]
main { q_id: '41', temp: 'temp' }
main { q_id: '41', temp: 'temp' }
question:  [ { m_id: 33,
    m_email: 'python@naver.com',
    m_password: '1234',
    m_name: '파이썬사랑해',
    m_point: 65,
    m_grade: 'D',
    m_language: 'Python',
    m_img: 'lion.jpg' } ]
reqemail python@naver.com
json:  [ { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
reqemail python@naver.com
json:  [ { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1 },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 1 } ]
reqemail python@naver.com
json:  [ { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
question:  [ { m_id: 33,
    m_email: 'python@naver.com',
    m_password: '1234',
    m_name: '파이썬사랑해',
    m_point: 65,
    m_grade: 'D',
    m_language: 'Python',
    m_img: 'lion.jpg' } ]
reqemail python@naver.com
json:  [ { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
reqemail python@naver.com
json:  [ { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1 },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 1 } ]
reqemail python@naver.com
json:  [ { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
메모데이터확인 []
메모를 저장하였습니다.
question:  [ { m_id: 33,
    m_email: 'python@naver.com',
    m_password: '1234',
    m_name: '파이썬사랑해',
    m_point: 65,
    m_grade: 'D',
    m_language: 'Python',
    m_img: 'lion.jpg' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '41', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '18', temp: 'temp' }
reqemail java@naver.com
json:  [ { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
reqemail java@naver.com
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1 } ]
reqemail java@naver.com
json:  [ { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: Connection lost: The server closed the connection.
    at Protocol.end (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:112:13)
    at Socket.<anonymous> (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:97:28)
    at Socket.<anonymous> (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:525:10)
    at emitNone (events.js:111:20)
    at Socket.emit (events.js:208:7)
    at endReadableNT (_stream_readable.js:1064:12)
    at _combinedTickCallback (internal/process/next_tick.js:139:11)
    at process._tickCallback (internal/process/next_tick.js:181:9)
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! codingmoa@1.0.0 start: `tsc; node ./build/main.js;`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the codingmoa@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2019-11-11T19_30_47_186Z-debug.log

> codingmoa@1.0.0 start /home/ec2-user/codingmoa
> tsc; node ./build/main.js;

Listening at http://localhost:3000/
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 25571,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583826317783,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 2343,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 2344,
     [Symbol(triggerAsyncId)]: 2343 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 25571,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583826317783,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 2343,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 2344,
     [Symbol(triggerAsyncId)]: 2343 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '51',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AXvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF.uvFcBL4sH9%2BSZTcVlfcGvEzX2JUdkEapDbsP6NDXB9U' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '51',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AXvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF.uvFcBL4sH9%2BSZTcVlfcGvEzX2JUdkEapDbsP6NDXB9U' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 25571,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583826317783,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 2343,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 2344,
     [Symbol(triggerAsyncId)]: 2343 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 25571,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 2343,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 2344,
        [Symbol(triggerAsyncId)]: 2343 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 25571,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 2343,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 2344,
        [Symbol(triggerAsyncId)]: 2343 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 459,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'XvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'dlguswns41@naver.com', loginpw: '1234' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main dlguswns41@naver.com
데이터값:  [ { m_id: 9,
    m_email: 'dlguswns41@naver.com',
    m_password: '1234',
    m_name: '이현준',
    m_point: 210,
    m_grade: 'D',
    m_language: 'C',
    m_img: null } ]
로그인성공
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
question:  [ { m_id: 31,
    m_email: 'ropem_@naver.com',
    m_password: '1234',
    m_name: '오우야',
    m_point: 35,
    m_grade: 'D',
    m_language: 'C',
    m_img: null },
  { m_id: 20,
    m_email: 'bb@naver.com',
    m_password: '1234',
    m_name: '박카스',
    m_point: 90,
    m_grade: 'D',
    m_language: 'C',
    m_img: null },
  { m_id: 11,
    m_email: 'go11@naver.com',
    m_password: '1234',
    m_name: '고건',
    m_point: 5,
    m_grade: 'F',
    m_language: 'C',
    m_img: null },
  { m_id: 22,
    m_email: '10000@naver.com',
    m_password: '1234',
    m_name: '김만구',
    m_point: 120,
    m_grade: 'D',
    m_language: 'C',
    m_img: null } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' } ]
reqemail dlguswns41@naver.com
json:  [ { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1 },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1 } ]
reqemail dlguswns41@naver.com
json:  [ { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' } ]
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' } ]
reqemail dlguswns41@naver.com
json:  [ { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' } ]
reqemail dlguswns41@naver.com
json:  [ { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1 },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1 } ]
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '33', temp: 'temp' }
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
events.js:183
      throw er; // Unhandled 'error' event
      ^

Error: Connection lost: The server closed the connection.
    at Protocol.end (/home/ec2-user/codingmoa/node_modules/mysql/lib/protocol/Protocol.js:112:13)
    at Socket.<anonymous> (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:97:28)
    at Socket.<anonymous> (/home/ec2-user/codingmoa/node_modules/mysql/lib/Connection.js:525:10)
    at emitNone (events.js:111:20)
    at Socket.emit (events.js:208:7)
    at endReadableNT (_stream_readable.js:1064:12)
    at _combinedTickCallback (internal/process/next_tick.js:139:11)
    at process._tickCallback (internal/process/next_tick.js:181:9)
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! codingmoa@1.0.0 start: `tsc; node ./build/main.js;`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the codingmoa@1.0.0 start script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /root/.npm/_logs/2020-03-10T15_56_09_389Z-debug.log

> codingmoa@1.0.0 start /home/ec2-user/codingmoa
> tsc; node ./build/main.js;

Listening at http://localhost:3000/
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '39', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '23', temp: 'temp' }
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '28', temp: 'temp' }
question:  []
question:  []
question:  []
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 215192,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906656736,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 5206,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 5207,
     [Symbol(triggerAsyncId)]: 5206 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 215192,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906656736,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 5206,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 5207,
     [Symbol(triggerAsyncId)]: 5206 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '49',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AXvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF.uvFcBL4sH9%2BSZTcVlfcGvEzX2JUdkEapDbsP6NDXB9U' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '49',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AXvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF.uvFcBL4sH9%2BSZTcVlfcGvEzX2JUdkEapDbsP6NDXB9U' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 215192,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906656736,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 5206,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 5207,
     [Symbol(triggerAsyncId)]: 5206 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 215192,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 5206,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 5207,
        [Symbol(triggerAsyncId)]: 5206 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 215192,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 5206,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 5207,
        [Symbol(triggerAsyncId)]: 5206 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'XvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'dongyang@naver.com', loginpw: '1234' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main dongyang@naver.com
데이터값:  []
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 223140,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906664696,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 5593,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 5594,
     [Symbol(triggerAsyncId)]: 5593 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 223140,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906664696,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 5593,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 5594,
     [Symbol(triggerAsyncId)]: 5593 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '49',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AXvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF.uvFcBL4sH9%2BSZTcVlfcGvEzX2JUdkEapDbsP6NDXB9U' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '49',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AXvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF.uvFcBL4sH9%2BSZTcVlfcGvEzX2JUdkEapDbsP6NDXB9U' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 223140,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906664696,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 5593,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 5594,
     [Symbol(triggerAsyncId)]: 5593 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 223140,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 5593,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 5594,
        [Symbol(triggerAsyncId)]: 5593 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 223140,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 5593,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 5594,
        [Symbol(triggerAsyncId)]: 5593 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'XvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'dongyang@naver.com', loginpw: '1234' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main dongyang@naver.com
데이터값:  []
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 825,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 228354,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906669912,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 5688,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 5689,
     [Symbol(triggerAsyncId)]: 5688 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 825,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 228354,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906669912,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 5688,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 5689,
     [Symbol(triggerAsyncId)]: 5688 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '51',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AXvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF.uvFcBL4sH9%2BSZTcVlfcGvEzX2JUdkEapDbsP6NDXB9U' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '51',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AXvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF.uvFcBL4sH9%2BSZTcVlfcGvEzX2JUdkEapDbsP6NDXB9U' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 825,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 5,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 228354,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906669912,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 5688,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 5689,
     [Symbol(triggerAsyncId)]: 5688 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 825,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 228354,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 5688,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 5689,
        [Symbol(triggerAsyncId)]: 5688 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 825,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 228354,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 5688,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 5689,
        [Symbol(triggerAsyncId)]: 5688 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'XvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'dlguswns41@naver.com', loginpw: '1234' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main dlguswns41@naver.com
데이터값:  [ { m_id: 9,
    m_email: 'dlguswns41@naver.com',
    m_password: '1234',
    m_name: '이현준',
    m_point: 210,
    m_grade: 'D',
    m_language: 'C',
    m_img: null } ]
로그인성공
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 286139,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906727671,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 6782,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 6784,
     [Symbol(triggerAsyncId)]: 6782 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 286139,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906727671,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 6782,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 6784,
     [Symbol(triggerAsyncId)]: 6782 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '113',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AXvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF.uvFcBL4sH9%2BSZTcVlfcGvEzX2JUdkEapDbsP6NDXB9U' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '113',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AXvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF.uvFcBL4sH9%2BSZTcVlfcGvEzX2JUdkEapDbsP6NDXB9U' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/register',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 286139,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906727671,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 6782,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 6784,
     [Symbol(triggerAsyncId)]: 6782 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/register',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/register',
     path: '/register',
     href: '/register',
     _raw: '/register' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 286139,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 6782,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 6784,
        [Symbol(triggerAsyncId)]: 6782 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 286139,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 6782,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 6784,
        [Symbol(triggerAsyncId)]: 6782 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/register',
     path: '/register',
     href: '/register',
     _raw: '/register' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'XvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { m_email: 'cafebene@naver.com',
     m_password: 'cafe',
     m_name: '카페맨',
     c_name: 'JavaScript',
     m_img: 'SQL.png' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/register',
     stack: [ [Object] ],
     methods: { post: true } } }
main 카페맨
UPLOAD SUCCESS! { fieldname: 'avatar',
  originalname: 'SQL.png',
  encoding: '7bit',
  mimetype: 'image/png',
  destination: 'webapp/src/assets/images/',
  filename: 'SQL.png',
  path: 'webapp/src/assets/images/SQL.png',
  size: 7031 }
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 297982,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906739532,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 7273,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 7274,
     [Symbol(triggerAsyncId)]: 7273 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 297982,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906739532,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 7273,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 7274,
     [Symbol(triggerAsyncId)]: 7273 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '49',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AXvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF.uvFcBL4sH9%2BSZTcVlfcGvEzX2JUdkEapDbsP6NDXB9U' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '49',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AXvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF.uvFcBL4sH9%2BSZTcVlfcGvEzX2JUdkEapDbsP6NDXB9U' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 297982,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906739532,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 7273,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 7274,
     [Symbol(triggerAsyncId)]: 7273 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 297982,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 7273,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 7274,
        [Symbol(triggerAsyncId)]: 7273 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 297982,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 7273,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 7274,
        [Symbol(triggerAsyncId)]: 7273 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'XvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'cafenene@naver.com', loginpw: 'cafe' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main cafenene@naver.com
데이터값:  []
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 308227,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906749776,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 7671,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 7672,
     [Symbol(triggerAsyncId)]: 7671 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 308227,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906749776,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 7671,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 7672,
     [Symbol(triggerAsyncId)]: 7671 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '49',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AXvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF.uvFcBL4sH9%2BSZTcVlfcGvEzX2JUdkEapDbsP6NDXB9U' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '49',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AXvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF.uvFcBL4sH9%2BSZTcVlfcGvEzX2JUdkEapDbsP6NDXB9U' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 308227,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583906749776,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 7671,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 7672,
     [Symbol(triggerAsyncId)]: 7671 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 308227,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 7671,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 7672,
        [Symbol(triggerAsyncId)]: 7671 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 308227,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 7671,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 7672,
        [Symbol(triggerAsyncId)]: 7671 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'XvMrTU8WOVfIIHXxh0zS_aKXhuayQLWF',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'cafebene@naver.com', loginpw: 'cafe' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main cafebene@naver.com
데이터값:  [ { m_id: 34,
    m_email: 'cafebene@naver.com',
    m_password: 'cafe',
    m_name: '카페맨',
    m_point: 0,
    m_grade: 'F',
    m_language: 'JavaScript',
    m_img: 'SQL.png' } ]
로그인성공
reqemail cafebene@naver.com
reqemail cafebene@naver.com
json:  []
json:  []
json:  []
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '30', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
question:  []
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '32', temp: 'temp' }
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
main { q_id: '32', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '33', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '33', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '33', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '33', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '33', temp: 'temp' }
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 609870,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907051425,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 16676,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 16677,
     [Symbol(triggerAsyncId)]: 16676 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 609870,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907051425,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 16676,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 16677,
     [Symbol(triggerAsyncId)]: 16676 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '55',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '55',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 609870,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907051425,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 16676,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 16677,
     [Symbol(triggerAsyncId)]: 16676 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 609870,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 16676,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 16677,
        [Symbol(triggerAsyncId)]: 16676 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 609870,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 16676,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 16677,
        [Symbol(triggerAsyncId)]: 16676 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'uemvuVXoCDeZxuEljYfHxnMtSSWSoRuR',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'ropem_@naver.com', loginpw: 'rldwjagh741!' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main ropem_@naver.com
데이터값:  [ { m_id: 31,
    m_email: 'ropem_@naver.com',
    m_password: '1234',
    m_name: '오우야',
    m_point: 35,
    m_grade: 'D',
    m_language: 'C',
    m_img: null } ]
로그인실패
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 618732,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907060289,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 17065,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 17066,
     [Symbol(triggerAsyncId)]: 17065 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 618732,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907060289,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 17065,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 17066,
     [Symbol(triggerAsyncId)]: 17065 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '54',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '54',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 618732,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907060289,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 17065,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 17066,
     [Symbol(triggerAsyncId)]: 17065 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 618732,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 17065,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 17066,
        [Symbol(triggerAsyncId)]: 17065 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 618732,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 17065,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 17066,
        [Symbol(triggerAsyncId)]: 17065 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'uemvuVXoCDeZxuEljYfHxnMtSSWSoRuR',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'ropem_@naver.com', loginpw: 'rldwjagh741' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main ropem_@naver.com
데이터값:  [ { m_id: 31,
    m_email: 'ropem_@naver.com',
    m_password: '1234',
    m_name: '오우야',
    m_point: 35,
    m_grade: 'D',
    m_language: 'C',
    m_img: null } ]
로그인실패
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 1378,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 625332,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907066890,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 17099,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 17100,
     [Symbol(triggerAsyncId)]: 17099 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 1378,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 625332,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907066890,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 17099,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 17100,
     [Symbol(triggerAsyncId)]: 17099 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '47',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '47',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/login',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 1378,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 625332,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907066890,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 17099,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 17100,
     [Symbol(triggerAsyncId)]: 17099 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/login',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 1378,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 625332,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 17099,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 17100,
        [Symbol(triggerAsyncId)]: 17099 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 1378,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 625332,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 17099,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 17100,
        [Symbol(triggerAsyncId)]: 17099 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/login',
     path: '/login',
     href: '/login',
     _raw: '/login' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'uemvuVXoCDeZxuEljYfHxnMtSSWSoRuR',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: { loginid: 'ropem_@naver.com', loginpw: '1234' },
  _body: true,
  length: undefined,
  read: [Function],
  route: Route { path: '/login', stack: [ [Object] ], methods: { post: true } } }
main ropem_@naver.com
데이터값:  [ { m_id: 31,
    m_email: 'ropem_@naver.com',
    m_password: '1234',
    m_name: '오우야',
    m_point: 35,
    m_grade: 'D',
    m_language: 'C',
    m_img: null } ]
로그인성공
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
json:  [ { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' } ]
reqemail ropem_@naver.com
reqemail ropem_@naver.com
json:  [ { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1 } ]
json:  []
main { q_id: '29', temp: 'temp' }
json:  [ { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' } ]
reqemail ropem_@naver.com
json:  []
reqemail ropem_@naver.com
json:  [ { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1 } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 679382,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907120937,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 18138,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 18139,
     [Symbol(triggerAsyncId)]: 18138 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 679382,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907120937,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 18138,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 18139,
     [Symbol(triggerAsyncId)]: 18138 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '163',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '163',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/questInput',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 679382,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907120937,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 18138,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 18139,
     [Symbol(triggerAsyncId)]: 18138 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/questInput',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/questInput',
     path: '/questInput',
     href: '/questInput',
     _raw: '/questInput' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 679382,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 18138,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 18139,
        [Symbol(triggerAsyncId)]: 18138 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 679382,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 18138,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 18139,
        [Symbol(triggerAsyncId)]: 18138 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/questInput',
     path: '/questInput',
     href: '/questInput',
     _raw: '/questInput' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'uemvuVXoCDeZxuEljYfHxnMtSSWSoRuR',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { name: '오우야',
     email: 'ropem_@naver.com',
     title: '',
     content: '안녕안녕 나는 지수야\n헬륨 가스 마셨더니 요로케 됐지',
     category: 'JAVA' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/questInput',
     stack: [ [Object] ],
     methods: { post: true } } }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' },
  { q_id: 43,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '',
    q_content: '안녕안녕 나는 지수야\n헬륨 가스 마셨더니 요로케 됐지',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' } ]
main { q_id: '43', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' },
  { q_id: 43,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '',
    q_content: '안녕안녕 나는 지수야\n헬륨 가스 마셨더니 요로케 됐지',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' } ]
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 711776,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907153331,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 18571,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 18572,
     [Symbol(triggerAsyncId)]: 18571 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 711776,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907153331,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 18571,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 18572,
     [Symbol(triggerAsyncId)]: 18571 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '175',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '175',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/questInput',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 711776,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907153331,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 18571,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 18572,
     [Symbol(triggerAsyncId)]: 18571 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/questInput',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/questInput',
     path: '/questInput',
     href: '/questInput',
     _raw: '/questInput' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 711776,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 18571,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 18572,
        [Symbol(triggerAsyncId)]: 18571 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 711776,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 18571,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 18572,
        [Symbol(triggerAsyncId)]: 18571 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/questInput',
     path: '/questInput',
     href: '/questInput',
     _raw: '/questInput' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'uemvuVXoCDeZxuEljYfHxnMtSSWSoRuR',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { name: '오우야',
     email: 'ropem_@naver.com',
     title: '안녕하세요 저는 24살 학생입니다',
     content: '아기는 어떻게 생성되는 것인가요?',
     category: '' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/questInput',
     stack: [ [Object] ],
     methods: { post: true } } }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' },
  { q_id: 43,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '',
    q_content: '안녕안녕 나는 지수야\n헬륨 가스 마셨더니 요로케 됐지',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' },
  { q_id: 44,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '안녕하세요 저는 24살 학생입니다',
    q_content: '아기는 어떻게 생성되는 것인가요?',
    awn_count: 0,
    c_name: '',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' } ]
main { q_id: '44', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' },
  { q_id: 43,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '',
    q_content: '안녕안녕 나는 지수야\n헬륨 가스 마셨더니 요로케 됐지',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' },
  { q_id: 44,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '안녕하세요 저는 24살 학생입니다',
    q_content: '아기는 어떻게 생성되는 것인가요?',
    awn_count: 0,
    c_name: '',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' },
  { q_id: 43,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '',
    q_content: '안녕안녕 나는 지수야\n헬륨 가스 마셨더니 요로케 됐지',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' },
  { q_id: 44,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '안녕하세요 저는 24살 학생입니다',
    q_content: '아기는 어떻게 생성되는 것인가요?',
    awn_count: 0,
    c_name: '',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' } ]
main { q_id: '22', temp: 'temp' }
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 728174,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907169731,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 19108,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 19109,
     [Symbol(triggerAsyncId)]: 19108 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 728174,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907169731,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 19108,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 19109,
     [Symbol(triggerAsyncId)]: 19108 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '107',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '107',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/awnserInput',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 728174,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907169731,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 19108,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 19109,
     [Symbol(triggerAsyncId)]: 19108 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/awnserInput',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/awnserInput',
     path: '/awnserInput',
     href: '/awnserInput',
     _raw: '/awnserInput' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 728174,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 19108,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 19109,
        [Symbol(triggerAsyncId)]: 19108 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 728174,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 19108,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 19109,
        [Symbol(triggerAsyncId)]: 19108 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/awnserInput',
     path: '/awnserInput',
     href: '/awnserInput',
     _raw: '/awnserInput' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'uemvuVXoCDeZxuEljYfHxnMtSSWSoRuR',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { q_id: '22',
     q_name: '이현준',
     a_name: '오우야',
     content: 'ㄹㅇㅋㅋ',
     email: 'ropem_@naver.com' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/awnserInput',
     stack: [ [Object] ],
     methods: { post: true } } }
main undefined
main { q_id: '22', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' },
  { q_id: 43,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '',
    q_content: '안녕안녕 나는 지수야\n헬륨 가스 마셨더니 요로케 됐지',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' },
  { q_id: 44,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '안녕하세요 저는 24살 학생입니다',
    q_content: '아기는 어떻게 생성되는 것인가요?',
    awn_count: 0,
    c_name: '',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' } ]
main { q_id: '32', temp: 'temp' }
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 747883,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907189438,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 19565,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 19566,
     [Symbol(triggerAsyncId)]: 19565 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 747883,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907189438,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 19565,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 19566,
     [Symbol(triggerAsyncId)]: 19565 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '134',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '134',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/awnserInput',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 747883,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907189438,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 19565,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 19566,
     [Symbol(triggerAsyncId)]: 19565 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/awnserInput',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/awnserInput',
     path: '/awnserInput',
     href: '/awnserInput',
     _raw: '/awnserInput' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 747883,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 19565,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 19566,
        [Symbol(triggerAsyncId)]: 19565 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 747883,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 19565,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 19566,
        [Symbol(triggerAsyncId)]: 19565 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/awnserInput',
     path: '/awnserInput',
     href: '/awnserInput',
     _raw: '/awnserInput' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'uemvuVXoCDeZxuEljYfHxnMtSSWSoRuR',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { q_id: '32',
     q_name: '김똘똘',
     a_name: '오우야',
     content: '괴물쥐 저라뎃 스크림영상 ㄲ',
     email: 'ropem_@naver.com' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/awnserInput',
     stack: [ [Object] ],
     methods: { post: true } } }
main undefined
main { q_id: '32', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 0,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' },
  { q_id: 43,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '',
    q_content: '안녕안녕 나는 지수야\n헬륨 가스 마셨더니 요로케 됐지',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' },
  { q_id: 44,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '안녕하세요 저는 24살 학생입니다',
    q_content: '아기는 어떻게 생성되는 것인가요?',
    awn_count: 0,
    c_name: '',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' } ]
main { q_id: '25', temp: 'temp' }
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 770356,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907211913,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 20007,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 20008,
     [Symbol(triggerAsyncId)]: 20007 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 770356,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907211913,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 20007,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 20008,
     [Symbol(triggerAsyncId)]: 20007 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '153',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '153',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/awnserInput',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 770356,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907211913,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 20007,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 20008,
     [Symbol(triggerAsyncId)]: 20007 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/awnserInput',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/awnserInput',
     path: '/awnserInput',
     href: '/awnserInput',
     _raw: '/awnserInput' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 770356,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 20007,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 20008,
        [Symbol(triggerAsyncId)]: 20007 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 770356,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 20007,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 20008,
        [Symbol(triggerAsyncId)]: 20007 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/awnserInput',
     path: '/awnserInput',
     href: '/awnserInput',
     _raw: '/awnserInput' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'uemvuVXoCDeZxuEljYfHxnMtSSWSoRuR',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { q_id: '25',
     q_name: '박자바',
     a_name: '오우야',
     content: '이 사이트에서 유일하게 정상적인 글이네요',
     email: 'ropem_@naver.com' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/awnserInput',
     stack: [ [Object] ],
     methods: { post: true } } }
main undefined
main { q_id: '25', temp: 'temp' }
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' },
  { q_id: 43,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '',
    q_content: '안녕안녕 나는 지수야\n헬륨 가스 마셨더니 요로케 됐지',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' },
  { q_id: 44,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '안녕하세요 저는 24살 학생입니다',
    q_content: '아기는 어떻게 생성되는 것인가요?',
    awn_count: 0,
    c_name: '',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
question:  [ { m_id: 28,
    m_email: 'test@naver.com',
    m_password: '1234',
    m_name: '휴머노이드',
    m_point: 0,
    m_grade: 'F',
    m_language: 'JavaScript',
    m_img: 'bono.jpg' } ]
reqemail test@naver.com
reqemail test@naver.com
json:  [ { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' } ]
json:  []
json:  []
question:  [ { m_id: 28,
    m_email: 'test@naver.com',
    m_password: '1234',
    m_name: '휴머노이드',
    m_point: 0,
    m_grade: 'F',
    m_language: 'JavaScript',
    m_img: 'bono.jpg' } ]
json:  [ { l_id: 12,
    lm_email: 'admin',
    c_name: 'Python',
    l_title: 'Python 완전 기초',
    lm_name: '관리자',
    l_count: 0,
    l_intro: 'Python언어를 공부 하고 있는 학생입니다.',
    l_img: 'python.jpg',
    l_video: 'small.mp4' },
  { l_id: 13,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JAVA',
    l_title: 'JAVA 알아보자',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '기초부터 심화까지 알아보자',
    l_img: 'java.jpeg',
    l_video: 'small.mp4' },
  { l_id: 14,
    lm_email: 'codemoa@naver.com',
    c_name: 'angular',
    l_title: 'angular 같이 배워봐요',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '앵귤러에 대해 같이 알아보아요',
    l_img: 'angular2.jpeg',
    l_video: 'small.mp4' },
  { l_id: 21,
    lm_email: 'dlguswns41@naver.com',
    c_name: 'JavaScript',
    l_title: '100분만에 마스터하는 자바스크립트',
    lm_name: '이현준',
    l_count: 0,
    l_intro: '빠르게 배워보자',
    l_img: '2.PNG',
    l_video: 'small.mp4' },
  { l_id: 22,
    lm_email: 'pakrjisung2@naver.com',
    c_name: 'CSS',
    l_title: 'CSS',
    lm_name: '박지성',
    l_count: 0,
    l_intro: 'SCSCSC',
    l_img: 'CSS.jpg',
    l_video: 'small.mp4' },
  { l_id: 39,
    lm_email: 'bb@naver.com',
    c_name: 'C',
    l_title: 'aaa',
    lm_name: '박카스',
    l_count: 0,
    l_intro: 'aaa',
    l_img: 'SQL.png',
    l_video: 'small.mp4' },
  { l_id: 40,
    lm_email: 'gamja@naver.com',
    c_name: 'C',
    l_title: 'C언어 심화과정',
    lm_name: '대왕통감자',
    l_count: 0,
    l_intro: 'A-B-C-D',
    l_img: '평면도.jpg',
    l_video: 'small.mp4' },
  { l_id: 41,
    lm_email: 'kingkong@naver.com',
    c_name: 'JavaScript',
    l_title: '띵띵',
    lm_name: '킹콩',
    l_count: 0,
    l_intro: '띵띵~',
    l_img: 'KakaoTalk_20180509_182122234.png',
    l_video: 'small.mp4' },
  { l_id: 42,
    lm_email: 'test@naver.com',
    c_name: 'Angular',
    l_title: '먼말인지 모르겠다 띵띵',
    lm_name: '휴머노이드',
    l_count: 0,
    l_intro: '띵띵...',
    l_img: 'orc.jpeg',
    l_video: 'small.mp4' },
  { l_id: 43,
    lm_email: 'codemoa@naver.com',
    c_name: 'JavaScript',
    l_title: '[JavaScript] 시간 지연 함수, 일정 시간 뒤 실행시키기, SetTimeout() {}',
    lm_name: '김동양',
    l_count: 0,
    l_intro: '어떻게 동작하고 사용하는지 자세히 알아보고자 합니다.',
    l_img: 'setTimeout.jpg',
    l_video: 'small.mp4' },
  { l_id: 44,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 1',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 1강 - Hello World! (Java Programming Tutorial 2017 #1) 강의 동영상입니다. JDK, 환경 변수 설정, 이클립스 설치를 거쳐서 완전한 자바 개발 환경을 구축한 이후에 Hello World를 출력하는 방법에 대해서 공부합니다.',
    l_img: 'javaimg.JPG',
    l_video: 'java1.mp4' },
  { l_id: 45,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 2',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: '자바 기초 프로그래밍 강좌 2강 - 변수(Variable) (Java Programming Tutorial 2017 #2) 강의 동영상입니다.\n 자바 개발 환경 설치 이후에 첫 번째로 배우는 프로그래밍으로 변수 부분에 대해서 학습하는 시간을 가집니다.',
    l_img: 'javaimg2.JPG',
    l_video: 'java2.mp4' },
  { l_id: 46,
    lm_email: 'java@naver.com',
    c_name: 'JAVA',
    l_title: '자바 기초 프로그래밍 강좌 - 3',
    lm_name: '자바맨',
    l_count: 0,
    l_intro: ' 이번 동영상 강좌는 조건문과 반복문 영역의 두 번째 파트 동영상 강좌입니다. \n이번 시간에는 이중 For문부터 다양한 조건문 활용 예제까지 실습을 통해서 조건문과 반복문을 확실하게 이해하는 시간을 가집니다.',
    l_img: 'javaimg3.JPG',
    l_video: 'java3.mp4' },
  { l_id: 47,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 1',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬의 기본 사용법을 알아보자\r *기본셋팅은 올려놓은 영상 참고*',
    l_img: 'pythonimg1.PNG',
    l_video: 'python1.mp4' },
  { l_id: 48,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 강좌 - 2',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '강좌 2번째로 print와 변수, 조건문 등을 중점으로 배워보도록 합시다.',
    l_img: 'pythonimg2.png',
    l_video: 'python2.mp4' },
  { l_id: 49,
    lm_email: 'python@naver.com',
    c_name: 'Python',
    l_title: '파이썬 기본 셋팅',
    lm_name: '파이썬사랑해',
    l_count: 0,
    l_intro: '파이썬을 사용하기 위한 기본 셋팅을 알아보자',
    l_img: 'pythonimg3.png',
    l_video: 'python3.mp4' } ]
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
json:  [ { q_id: 18,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '앵귤러 새로고침',
    q_content: '프론트 엔드에 연결하는 firebase auth가있는 노드 백엔드가 있습니다. 파이어베이스에 등록 할 백엔드 함수를 호출하고 firebase.auth (). currentUser를 다시 등록하면 내 각도 프론트 엔드 탐색 표시기가 해당 사용자의 도착을 어떻게 감지해야합니까? 내가 페이지를 새로 고치지 않고 그에 따라 자동으로 업데이트됩니까?',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 5,
    qq_date: '2019-05-21' },
  { q_id: 19,
    m_email: 'admin',
    m_name: '관리자',
    q_title: '관리자 테스트 1234',
    q_content: '여러분 안녕하세요 관리자입니다.',
    awn_count: 2,
    c_name: 'css',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 10,
    qq_date: '2019-05-21' },
  { q_id: 20,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '로그인 라우팅 구성 요소에서 Nav-menu 구성 요소로 데이터 전달',
    q_content: '각도 응용 프로그램에 도움이 필요합니다. 각도 6을 프런트 엔드로 사용하는 .net 핵심 응용 프로그램이 있습니다. 이제 Angular app에는 APP 모듈이 있으며 거기에 기능 모듈이 있습니다. 앱 모듈에는 탐색 메뉴가 있습니다. 기능 모듈에는 홈 구성 요소와 일부 다른 구성 요소가 있습니다. 나 또한 별도의 로그인 응용 프로그램 (.net에 있음)이 있습니다.',
    awn_count: 3,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-05-21' },
  { q_id: 22,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '알려주세요 모르겠어',
    q_content: 'ㄹㅋㅋ',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 16,
    qq_date: '2019-05-22' },
  { q_id: 23,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'ㅁㄴ',
    q_content: 'ㄴㅁ',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-05-22' },
  { q_id: 25,
    m_email: 'eee@naver.com',
    m_name: '박자바',
    q_title: 'angular',
    q_content: '본질적으로 앵귤러 JS를 사용하는 이유는 잘 설계된 좋은 구조의 웹 페이지와 애플리케이션을 구현할 수 있는 프레임워크를 제공하자는 것이 앵귤러 JS의 기원이다. \n\n\n\n앵귤러 JS와 유사한 자바스크립트 프레임워크로는 BackBond.js, Ember. Meteor 등과 있으나 현재 앵귤러JS는 현시점에서 가장 좋은 디자인과 기능을 가지고 있다. ',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-05-24T00:00:00.000Z',
    q_view: 14,
    qq_date: '2019-05-24' },
  { q_id: 27,
    m_email: 'korea@naver.com',
    m_name: '강한국',
    q_title: 'html css 질문드립니다.',
    q_content: 'body {\n        background: #eee;\n        font-family: Helvetica Neue, Helvetica, Arial, sans-serif;\n        font-size: 14px;\n        color: #000;\n        margin: 0;\n        padding: 0;\n}',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 0,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 30,
    m_email: '123code@naver.com',
    m_name: '갤럭시',
    q_title: 'SecureCRT - The rock-solid Te',
    q_content: 'asdjksdakjvksadjv<br/>skldjvlsakd<br/>savdjksadvjl',
    awn_count: 1,
    c_name: 'angular',
    q_choose: 0,
    q_date: '2019-07-13T00:00:00.000Z',
    q_view: 7,
    qq_date: '2019-07-13' },
  { q_id: 32,
    m_email: 'doldol@naver.com',
    m_name: '김똘똘',
    q_title: '바라는건없어요',
    q_content: '바라는건없어요...',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2019-08-08T00:00:00.000Z',
    q_view: 21,
    qq_date: '2019-08-08' },
  { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 34,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 35,
    m_email: 'admin',
    m_name: '관리자',
    q_title: 'C언어에 관해서',
    q_content: 'C언어란',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 36,
    m_email: 'gamja@naver.com',
    m_name: '대왕통감자',
    q_title: 'log different log levels to different files with log4j',
    q_content: 'DATE 타입의 DT1 컬럼과 DATETIME 타입의 DT2컬럼에 NOW()함수를 이용하여 현재 날짜(시간)을 입력하였더니 입력은 되는데 1개의 경고 메세지가 발생했다. SHOW WARNING 메세지로 확인하니 DT1 컬럼에 데이터가 입력되면서 데이터가 잘렸고, DT2컬럼에는 초단위 데이터가 입력되었는데 DT1 컬럼에는 일 단위 데이터만 들어가 있다.',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-14T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-14' },
  { q_id: 38,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 오류 해결좀..',
    q_content: 'IndentationError: expected an indented block\n에러인데 원인이 뭘까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 39,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: '파이썬 하나더.. 질',
    q_content: 'SyntaxError: can\'t assign to literal\n\n이건 또 무슨에러 인가요ㅠㅠ?',
    awn_count: 2,
    c_name: 'python',
    q_choose: 0,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 42,
    m_email: 'python@naver.com',
    m_name: '파이썬사랑해',
    q_title: '최종데모',
    q_content: '1ㆍ프로젝트 개요\n2ㆍ적용된 주요기술\n3ㆍ구현기능\n4ㆍ데모',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' },
  { q_id: 43,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '',
    q_content: '안녕안녕 나는 지수야\n헬륨 가스 마셨더니 요로케 됐지',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' },
  { q_id: 44,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '안녕하세요 저는 24살 학생입니다',
    q_content: '아기는 어떻게 생성되는 것인가요?',
    awn_count: 0,
    c_name: '',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' } ]
json:  [ { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 43,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '',
    q_content: '안녕안녕 나는 지수야\n헬륨 가스 마셨더니 요로케 됐지',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' },
  { q_id: 44,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '안녕하세요 저는 24살 학생입니다',
    q_content: '아기는 어떻게 생성되는 것인가요?',
    awn_count: 0,
    c_name: '',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' } ]
reqemail ropem_@naver.com
json:  [ { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1 } ]
reqemail ropem_@naver.com
json:  []
main { q_id: '34', temp: 'temp' }
IncomingMessage {
  _readableState: 
   ReadableState {
     objectMode: false,
     highWaterMark: 16384,
     buffer: BufferList { head: null, tail: null, length: 0 },
     length: 0,
     pipes: null,
     pipesCount: 0,
     flowing: true,
     ended: true,
     endEmitted: true,
     reading: false,
     sync: true,
     needReadable: false,
     emittedReadable: false,
     readableListening: false,
     resumeScheduled: false,
     destroyed: false,
     defaultEncoding: 'utf8',
     awaitDrain: 0,
     readingMore: false,
     decoder: null,
     encoding: null },
  readable: false,
  domain: null,
  _events: { end: [Function: resetHeadersTimeoutOnReqEnd] },
  _eventsCount: 1,
  _maxListeners: undefined,
  socket: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 862438,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907303995,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 22851,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 22852,
     [Symbol(triggerAsyncId)]: 22851 },
  connection: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 862438,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907303995,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 22851,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 22852,
     [Symbol(triggerAsyncId)]: 22851 },
  httpVersionMajor: 1,
  httpVersionMinor: 1,
  httpVersion: '1.1',
  complete: true,
  headers: 
   { host: 'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     connection: 'keep-alive',
     'content-length': '130',
     accept: 'application/json, text/plain, */*',
     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'content-type': 'application/x-www-form-urlencoded; charset=UTF-8',
     origin: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     referer: 'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'accept-encoding': 'gzip, deflate',
     'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     cookie: 'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' },
  rawHeaders: 
   [ 'Host',
     'ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Connection',
     'keep-alive',
     'Content-Length',
     '130',
     'Accept',
     'application/json, text/plain, */*',
     'User-Agent',
     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36',
     'Content-Type',
     'application/x-www-form-urlencoded; charset=UTF-8',
     'Origin',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000',
     'Referer',
     'http://ec2-13-209-164-128.ap-northeast-2.compute.amazonaws.com:3000/',
     'Accept-Encoding',
     'gzip, deflate',
     'Accept-Language',
     'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
     'Cookie',
     'connect.sid=s%3AuemvuVXoCDeZxuEljYfHxnMtSSWSoRuR.Pqpu3EobbDkL9%2FaI0dnuMw16JZsxG673vGs4fM%2Fol68' ],
  trailers: {},
  rawTrailers: [],
  aborted: false,
  upgrade: false,
  url: '/awnserInput',
  method: 'POST',
  statusCode: null,
  statusMessage: null,
  client: 
   Socket {
     connecting: false,
     _hadError: false,
     _handle: 
      TCP {
        reading: true,
        owner: [Circular],
        onread: [Function: onread],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true },
     _parent: null,
     _host: null,
     _readableState: 
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [Object],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null },
     readable: true,
     domain: null,
     _events: 
      { end: [Array],
        _socketEnd: [Function: onSocketEnd],
        drain: [Array],
        timeout: [Function: socketOnTimeout],
        data: [Function: bound socketOnData],
        error: [Function: socketOnError],
        close: [Array],
        resume: [Function: onSocketResume],
        pause: [Function: onSocketPause] },
     _eventsCount: 9,
     _maxListeners: undefined,
     _writableState: 
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: true,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object] },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 0,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _server: 
      Server {
        domain: null,
        _events: [Object],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [Object],
        _usingSlaves: false,
        _slaves: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        headersTimeout: 40000,
        _connectionKey: '6::::3000',
        [Symbol(IncomingMessage)]: [Object],
        [Symbol(ServerResponse)]: [Object],
        [Symbol(asyncId)]: 3 },
     _idleTimeout: 120000,
     _idleNext: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idlePrev: 
      TimersList {
        _idleNext: [Circular],
        _idlePrev: [Circular],
        _timer: [Object],
        _unrefed: true,
        msecs: 120000,
        nextTick: false },
     _idleStart: 862438,
     _destroyed: false,
     parser: 
      HTTPParser {
        '0': [Function: parserOnHeaders],
        '1': [Function: parserOnHeadersComplete],
        '2': [Function: parserOnBody],
        '3': [Function: parserOnMessageComplete],
        '4': [Function: bound onParserExecute],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular],
        incoming: [Circular],
        outgoing: null,
        parsingHeadersStart: 1583907303995,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming],
        [Symbol(isReused)]: true },
     on: [Function: socketOnWrap],
     _paused: false,
     _httpMessage: 
      ServerResponse {
        domain: null,
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: false,
        upgrading: false,
        chunkedEncoding: false,
        shouldKeepAlive: true,
        useChunkedEncodingByDefault: true,
        sendDate: true,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: null,
        _hasBody: true,
        _trailer: '',
        finished: false,
        _headerSent: false,
        socket: [Circular],
        connection: [Circular],
        _header: null,
        _onPendingData: [Function: bound updateOutgoingData],
        _sent100: false,
        _expect_continue: false,
        req: [Circular],
        locals: {},
        writeHead: [Function: writeHead],
        end: [Function: end],
        [Symbol(outHeadersKey)]: [Object] },
     [Symbol(asyncId)]: 22851,
     [Symbol(bytesRead)]: 0,
     [Symbol(asyncId)]: 22852,
     [Symbol(triggerAsyncId)]: 22851 },
  _consuming: true,
  _dumped: false,
  next: [Function: next],
  baseUrl: '',
  originalUrl: '/awnserInput',
  _parsedUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/awnserInput',
     path: '/awnserInput',
     href: '/awnserInput',
     _raw: '/awnserInput' },
  params: {},
  query: {},
  res: 
   ServerResponse {
     domain: null,
     _events: { finish: [Function: bound resOnFinish] },
     _eventsCount: 1,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: false,
     upgrading: false,
     chunkedEncoding: false,
     shouldKeepAlive: true,
     useChunkedEncodingByDefault: true,
     sendDate: true,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: null,
     _hasBody: true,
     _trailer: '',
     finished: false,
     _headerSent: false,
     socket: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 862438,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 22851,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 22852,
        [Symbol(triggerAsyncId)]: 22851 },
     connection: 
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [Object],
        _parent: null,
        _host: null,
        _readableState: [Object],
        readable: true,
        domain: null,
        _events: [Object],
        _eventsCount: 9,
        _maxListeners: undefined,
        _writableState: [Object],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 0,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Object],
        _server: [Object],
        _idleTimeout: 120000,
        _idleNext: [Object],
        _idlePrev: [Object],
        _idleStart: 862438,
        _destroyed: false,
        parser: [Object],
        on: [Function: socketOnWrap],
        _paused: false,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 22851,
        [Symbol(bytesRead)]: 0,
        [Symbol(asyncId)]: 22852,
        [Symbol(triggerAsyncId)]: 22851 },
     _header: null,
     _onPendingData: [Function: bound updateOutgoingData],
     _sent100: false,
     _expect_continue: false,
     req: [Circular],
     locals: {},
     writeHead: [Function: writeHead],
     end: [Function: end],
     [Symbol(outHeadersKey)]: 
      { 'x-powered-by': [Array],
        'access-control-allow-origin': [Array] } },
  _parsedOriginalUrl: 
   Url {
     protocol: null,
     slashes: null,
     auth: null,
     host: null,
     port: null,
     hostname: null,
     hash: null,
     search: null,
     query: null,
     pathname: '/awnserInput',
     path: '/awnserInput',
     href: '/awnserInput',
     _raw: '/awnserInput' },
  sessionStore: 
   MySQLStore {
     connection: 
      Pool {
        domain: null,
        _events: {},
        _eventsCount: 0,
        _maxListeners: undefined,
        config: [Object],
        _acquiringConnections: [],
        _allConnections: [Array],
        _freeConnections: [Array],
        _connectionQueue: [],
        _closed: false },
     options: 
      { host: '127.0.0.1',
        user: 'root',
        password: 'Root!0000',
        database: 'codemoa',
        port: '3306',
        endConnectionOnClose: true,
        clearExpired: true,
        checkExpirationInterval: 900000,
        expiration: 86400000,
        createDatabaseTable: true,
        connectionLimit: 1,
        charset: 'utf8mb4_bin',
        schema: [Object] },
     generate: [Function],
     _events: 
      { disconnect: [Function: ondisconnect],
        connect: [Function: onconnect] },
     _eventsCount: 2,
     _expirationInterval: 
      Timeout {
        _called: false,
        _idleTimeout: 900000,
        _idlePrev: [Object],
        _idleNext: [Object],
        _idleStart: 771,
        _onTimeout: [Function: bound ],
        _timerArgs: undefined,
        _repeat: 900000,
        _destroyed: false,
        [Symbol(asyncId)]: 21,
        [Symbol(triggerAsyncId)]: 9 } },
  sessionID: 'uemvuVXoCDeZxuEljYfHxnMtSSWSoRuR',
  session: 
   Session {
     cookie: 
      { path: '/',
        _expires: null,
        originalMaxAge: null,
        httpOnly: true } },
  body: 
   { q_id: '34',
     q_name: '관리자',
     a_name: '오우야',
     content: '질문을 신박하게 하시네요',
     email: 'ropem_@naver.com' },
  _body: true,
  length: undefined,
  read: [Function],
  route: 
   Route {
     path: '/awnserInput',
     stack: [ [Object] ],
     methods: { post: true } } }
main undefined
main { q_id: '34', temp: 'temp' }
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
json:  [ { q_id: 33,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '고니와 아귀',
    q_content: '싸늘하다 가슴에 비수가 날아와 꽂힌다\n하지만 걱정하지 마라 손은 눈보다 빠르니까\n\n패에서 아귀패를 밑에서 한장\n정마담패도 밑에서 한장\n나 한장\n\n다시 아귀패를 밑에서 한장\n정마담에게 마지막 한장..\n\n동작 그만 밑장빼기냐?\n뭐야\n\n내 패하고 정마담패를 밑에서 뺐지\n내가 빙다리 핫바지로 보이냐?\n\n증거있어?\n\n증거? 허허허 너는 나에게 구땡을 줬을것이여\n그리고 지금 손에 보이는 이거 장짜리 아니여?',
    awn_count: 0,
    c_name: 'C',
    q_choose: 0,
    q_date: '2019-10-11T00:00:00.000Z',
    q_view: 8,
    qq_date: '2019-10-11' },
  { q_id: 43,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '',
    q_content: '안녕안녕 나는 지수야\n헬륨 가스 마셨더니 요로케 됐지',
    awn_count: 0,
    c_name: 'JAVA',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' },
  { q_id: 44,
    m_email: 'ropem_@naver.com',
    m_name: '오우야',
    q_title: '안녕하세요 저는 24살 학생입니다',
    q_content: '아기는 어떻게 생성되는 것인가요?',
    awn_count: 0,
    c_name: '',
    q_choose: 0,
    q_date: '2020-03-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2020-03-11' } ]
reqemail ropem_@naver.com
json:  [ { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1 } ]
reqemail ropem_@naver.com
json:  []
json:  [ { q_id: 17,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '무슨 에러일까요',
    q_content: 'Null 포인터 예외 ( java.lang.NullPointerException)는 무엇이며 그 원인은 무엇입니까?\n\n원인을 판별하기 위해 어떤 방법 / 도구를 사용하여 예외로 인해 프로그램이 일찍 종료되는 것을 막을 수 있습니까?',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-10-12T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-10-12' },
  { q_id: 21,
    m_email: 'codemoa@naver.com',
    m_name: '김동양',
    q_title: 'HTML과 CSS를 배우는 방법',
    q_content: '새로운 Im 코딩. 스위프트 알아. 나는 html과 css를 동시에 배우고 싶다. 나는이 언어들의 사용법을 안다.\n\n내가 알고 싶은, 만약 내가 어떤 HTML을 쓰고있어, 내가 동일한 프로젝트 CSS를 쓸 수 있습니까? 내가 틀린 질문을하면, 네가 나를 이해하기를 바란다. (임 젊고, 그리스에서 ...)\n\nHTML, CSS 및 일반적으로 다른 언어를 학습하는 데 가장 좋은 소스는 무엇입니까?',
    awn_count: 5,
    c_name: 'css',
    q_choose: 1,
    q_date: '2019-05-21T00:00:00.000Z',
    q_view: 12,
    qq_date: '2019-05-21' },
  { q_id: 24,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'asdsdasd',
    q_content: 'asdasdads',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-22T00:00:00.000Z',
    q_view: 33,
    qq_date: '2019-05-22' },
  { q_id: 26,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: '배열 선언',
    q_content: 'name에 20자를 입력할경우엔 정상이지만 그 이상의 문자를 입력시 다른 스택의 영역까지 침범 합니다...\n\nvs2008 사용중인데 오버해서 입력시 프로그램 종료시에 스택 에러가 일어나는데요\n\n문자열을 입력받을때 원하는 만큼만 입력받으려고 하는경우 어떻게 해야될까요...\n\n20자 이상은 처음부터 받고싶지않습니다 ...',
    awn_count: 1,
    c_name: 'C',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 22,
    qq_date: '2019-05-25' },
  { q_id: 28,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: '테스트',
    q_content: '안 녕 하 세 요',
    awn_count: 1,
    c_name: 'JAVA',
    q_choose: 1,
    q_date: '2019-05-25T00:00:00.000Z',
    q_view: 1,
    qq_date: '2019-05-25' },
  { q_id: 29,
    m_email: 'dlguswns41@naver.com',
    m_name: '이현준',
    q_title: 'textarea 줄바꿈',
    q_content: '줄\n바\n꿈',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-07-11T00:00:00.000Z',
    q_view: 6,
    qq_date: '2019-07-11' },
  { q_id: 31,
    m_email: 'kingkong@naver.com',
    m_name: '킹콩',
    q_title: 'aaa aaa',
    q_content: 'aaa a <br>aaaa<br><br>aaaaa',
    awn_count: 1,
    c_name: 'CSS',
    q_choose: 1,
    q_date: '2019-08-05T00:00:00.000Z',
    q_view: 13,
    qq_date: '2019-08-05' },
  { q_id: 37,
    m_email: 'go11@naver.com',
    m_name: '고건',
    q_title: '파이썬 에러 질문이요',
    q_content: 'SyntaxError: EOL while scanning string literal\n\n이런 에러 메시지가 떴는데, 원인이 무엇일까요?',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-20T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-20' },
  { q_id: 40,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: 'Python이란 무엇인가요',
    q_content: '파이썬에 무엇인지 알려주세요..\n예를 들어 어떻게 사용하는지 등등...',
    awn_count: 1,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-10-30T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-10-30' },
  { q_id: 41,
    m_email: 'java@naver.com',
    m_name: '자바맨',
    q_title: '파이썬 설치 방법',
    q_content: '파이썬 설치 방법 및 셋팅 방법좀 알려주세요...',
    awn_count: 3,
    c_name: 'python',
    q_choose: 1,
    q_date: '2019-11-11T00:00:00.000Z',
    q_view: 0,
    qq_date: '2019-11-11' } ]
main { q_id: '26', temp: 'temp' }
